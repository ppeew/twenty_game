syntax = "proto3";
import "google/protobuf/empty.proto";
option go_package = "./game;game";
package game;


service Game{
  //获得连接的服务器信息
  rpc GetConnData(UserIDInfo)returns(ConnResponse);
  //记录连接的服务器信息
  rpc RecordConnData(RecordConnInfo)returns(google.protobuf.Empty);

  //获得排行榜信息
  rpc GetRanks(google.protobuf.Empty)returns(RanksResponse);
  //更新排行榜
  rpc UpdateRanks(UpdateRanksInfo)returns(google.protobuf.Empty);

  //新建用户道具表
  rpc CreateUserItems(UserItemsInfo)returns(UserItemsInfoResponse);
  //查询用户的金币钻石及道具
  rpc GetUserItemsInfo(UserIDInfo) returns(UserItemsInfoResponse);
  //增加金币
  rpc AddGold(AddGoldRequest) returns(google.protobuf.Empty);
  //增加钻石
  rpc AddDiamond(AddDiamondInfo) returns(google.protobuf.Empty);
  //增加道具(道具类型应该区别)
  rpc AddItem(AddItemInfo) returns(google.protobuf.Empty);
  //使用金币
  rpc UseGold(UseGoldRequest) returns(IsOK);
  //使用钻石
  rpc UseDiamond(UseDiamondInfo) returns(IsOK);
  //使用道具(道具类型应该区别)
  rpc UseItem(UseItemInfo) returns(IsOK);

  //查询所有房间
  rpc SearchAllRoom(google.protobuf.Empty)returns(AllRoomInfo);
  //创建房间
  rpc CreateRoom(RoomInfo)returns (google.protobuf.Empty);
  // 进入房间
  rpc UserIntoRoom(UserIntoRoomInfo) returns (IntoRoomRsp);
  //查询房间
  rpc SearchRoom(RoomIDInfo)returns (RoomInfo);
  //删除房间
  rpc DeleteRoom(RoomIDInfo)returns (google.protobuf.Empty);
  // 退出房间
  rpc QuitRoom(QuitRoomInfo)returns (QuitRsp);
  // 房主更新房间信息
  rpc UpdateRoom(UpdateRoomInfo)returns (RoomInfo);
  // 更新用户准备状态
  rpc UpdateUserReadyState(ReadyStateInfo)returns (RoomInfo);
  // 房主开始游戏
  rpc BeginGame(BeginGameInfo)returns(BeginGameRsp);
  // 回到房间
  rpc BackRoom(RoomIDInfo)returns(google.protobuf.Empty);
}

message ConnResponse{
  string serverInfo=1;
}

message RecordConnInfo{
  string serverInfo=1;
  uint32 id=2;
}

message UserRankInfo{
  uint32 id=1;
  uint64 score=2;
  uint64 gametimes=3;
}

message RanksResponse{
  repeated UserRankInfo info=1;
}

message UpdateRanksInfo{
  uint32 userID=1;
  uint32 addScore=2;
  uint32 addGametimes=3;
}

message IntoRoomRsp{
  RoomInfo roomInfo=1;
  string errorMsg=2;
}

message BeginGameRsp{
  RoomInfo roomInfo=1;
  string errorMsg=2;
}

message BeginGameInfo{
  uint32 roomID=1;
  uint32 userID=2;
}

message QuitRsp{
  RoomInfo roomInfo=1;
  bool isOwnerQuit=2;
}

message ReadyStateInfo{
  uint32 roomID=1;
  uint32 userID=2;
  bool isReady=3;
}

message UpdateRoomInfo{
  uint32 roomID=1;
  uint32 userID=2;
  uint32 maxUserNumber=3;
  uint32 gameCount=4;
  uint32 owner=5;
  uint32 kicker=6;
}

message QuitRoomInfo{
  uint32 roomID=1;
  uint32 userID=2;
}

message UserIntoRoomInfo{
  uint32 roomID=1;
  uint32 userID=2;
}

message IsOK{
  bool isOK=1;
}

message UseGoldRequest{
  uint32 id=1;
  uint32 count=2;
}

message UseDiamondInfo{
  uint32 id=1;
  uint32 count=2;
}

message UseItemInfo{
  uint32 id=1;
  repeated uint32 items=2;
}

message UserItemsInfo{
  uint32 id=1;
  uint32 gold=2;
  uint32 diamond=3;
  uint32 apple=4;
  uint32 banana=5;
}

enum Type{
  Apple=0;
  Banana=1;
}

message UserIDInfo{
  uint32 id=1;
}

message UserItemsInfoResponse{
  uint32 id=1;
  uint32 gold=2;
  uint32 diamond=3;
  //道具
  repeated uint32 items=4;
}

message AddGoldRequest{
  uint32 id=1;
  uint32 count=2;
}

message AddDiamondInfo{
  uint32 id=1;
  uint32 count=2;
}

message AddItemInfo{
  uint32 id=1;
  repeated uint32 items=2;
}

message RoomIDInfo {
  uint32 RoomID=1;
}

message RoomUser{
  uint32 ID=1;
  bool Ready=2;
}

message RoomInfo{
  uint32 RoomID=1;
  uint32 MaxUserNumber=2;
  uint32 GameCount=3;
  uint32 UserNumber=4;
  uint32 RoomOwner=5;
  bool RoomWait=6;
  repeated RoomUser Users=7;
  string RoomName=8;
}

message AllRoomInfo{
  repeated RoomInfo AllRoomInfo=1;
}